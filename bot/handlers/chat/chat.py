from aiogram import Router, Bot
from aiogram.types import Message
from aiogram.enums import ChatAction
from openai import AsyncOpenAI

from database.repositories import UsersRepository
from bot.services.chat_services import get_ai_reply


router = Router()


@router.message()
async def handle_other_messages(message: Message, bot: Bot, openai_client: AsyncOpenAI):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not await UsersRepository.is_user_activated(message.from_user.id):
        await message.answer("–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ /start")
        return

    # –°–æ–æ–±—â–∞–µ–º, —á—Ç–æ –±–æ—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
    processing_msg = await message.answer("üí° –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –û—Ç–≤–µ—Ç –ø–æ—è–≤–∏—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑ 10‚Äì15 —Å–µ–∫—É–Ω–¥.")
    await bot.send_chat_action(
        message.chat.id,
        ChatAction.TYPING
    )

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏
    ai_reply = await get_ai_reply(
        text=message.text,
        openai_client=openai_client
    )

    # –£–¥–∞–ª—è–µ–º "–∑–∞–≥–ª—É—à–∫—É" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    await processing_msg.delete()
    await message.reply(ai_reply)
